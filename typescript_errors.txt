
> hudson-digital-solutions@0.1.0 type-check
> tsc --noEmit

app/(admin)/analytics/page.tsx(19,98): error TS2554: Expected 1-2 arguments, but got 0.
app/(admin)/analytics/page.tsx(20,97): error TS2554: Expected 1-2 arguments, but got 0.
app/(admin)/analytics/page.tsx(21,88): error TS2554: Expected 1-2 arguments, but got 0.
app/(admin)/analytics/page.tsx(27,31): error TS2339: Property 'totalWebVitals' does not exist on type '{ overview: { pageViews: number; uniqueVisitors: number; conversions: number; conversionRate: number; }; breakdown: { topPages: { page: string; views: number; }[]; trafficSources: { source: string; visitors: number; }[]; devices: { ...; }[]; }; }'.
app/(admin)/analytics/page.tsx(28,36): error TS2339: Property 'recentContacts' does not exist on type '{ overview: { pageViews: number; uniqueVisitors: number; conversions: number; conversionRate: number; }; breakdown: { topPages: { page: string; views: number; }[]; trafficSources: { source: string; visitors: number; }[]; devices: { ...; }[]; }; }'.
app/(admin)/analytics/page.tsx(30,36): error TS2339: Property 'recentLeads' does not exist on type '{ overview: { pageViews: number; uniqueVisitors: number; conversions: number; conversionRate: number; }; breakdown: { topPages: { page: string; views: number; }[]; trafficSources: { source: string; visitors: number; }[]; devices: { ...; }[]; }; }'.
app/(admin)/analytics/page.tsx(30,66): error TS2339: Property 'recentContacts' does not exist on type '{ overview: { pageViews: number; uniqueVisitors: number; conversions: number; conversionRate: number; }; breakdown: { topPages: { page: string; views: number; }[]; trafficSources: { source: string; visitors: number; }[]; devices: { ...; }[]; }; }'.
app/(admin)/analytics/page.tsx(31,23): error TS2339: Property 'recentLeads' does not exist on type '{ overview: { pageViews: number; uniqueVisitors: number; conversions: number; conversionRate: number; }; breakdown: { topPages: { page: string; views: number; }[]; trafficSources: { source: string; visitors: number; }[]; devices: { ...; }[]; }; }'.
app/(admin)/analytics/page.tsx(31,67): error TS2339: Property 'recentContacts' does not exist on type '{ overview: { pageViews: number; uniqueVisitors: number; conversions: number; conversionRate: number; }; breakdown: { topPages: { page: string; views: number; }[]; trafficSources: { source: string; visitors: number; }[]; devices: { ...; }[]; }; }'.
app/(admin)/analytics/page.tsx(35,38): error TS2339: Property 'sourceBreakdown' does not exist on type '{ summary: { total: number; new: number; qualified: number; won: number; conversionRate: number; }; breakdown: { byStatus: { status: ContactStatus; count: number; }[]; byService: { service: string | null; count: number; }[]; }; recent: { ...; }[]; }'.
app/(admin)/analytics/page.tsx(36,37): error TS2339: Property 'sourceBreakdown' does not exist on type '{ summary: { total: number; new: number; qualified: number; won: number; conversionRate: number; }; breakdown: { byStatus: { status: ContactStatus; count: number; }[]; byService: { service: string | null; count: number; }[]; }; recent: { ...; }[]; }'.
app/(admin)/contacts/page.tsx(136,54): error TS2339: Property 'fetch' does not exist on type 'DecoratedQuery<{ input: { status?: "NEW" | "CONTACTED" | "QUALIFIED" | "PROPOSAL_SENT" | "WON" | "LOST" | "UNRESPONSIVE" | undefined; page?: number | undefined; search?: string | undefined; service?: string | undefined; limit?: number | undefined; startDate?: string | undefined; endDate?: string | undefined; }; outp...'.
app/(admin)/contacts/page.tsx(153,47): error TS7006: Parameter 'contact' implicitly has an 'any' type.
app/(admin)/contacts/page.tsx(168,24): error TS7006: Parameter 'row' implicitly has an 'any' type.
app/(admin)/contacts/page.tsx(168,39): error TS7006: Parameter 'field' implicitly has an 'any' type.
app/(admin)/contacts/page.tsx(398,42): error TS2345: Argument of type 'string | null' is not assignable to parameter of type 'string | undefined'.
  Type 'null' is not assignable to type 'string | undefined'.
app/(admin)/dashboard-01/page.tsx(34,26): error TS2322: Type '{ data: { id: number; header: string; type: string; status: string; target: string; limit: string; reviewer: string; }[]; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'data' does not exist on type 'IntrinsicAttributes'.
app/(admin)/leads/page.tsx(116,51): error TS2339: Property 'fetch' does not exist on type 'DecoratedQuery<{ input: { status?: "NEW" | "CONTACTED" | "QUALIFIED" | "PROPOSAL_SENT" | "WON" | "LOST" | "UNRESPONSIVE" | undefined; page?: number | undefined; search?: string | undefined; service?: string | undefined; limit?: number | undefined; sortBy?: "value" | ... 2 more ... | undefined; sortOrder?: "asc" | .....'.
app/(admin)/leads/page.tsx(135,44): error TS7006: Parameter 'lead' implicitly has an 'any' type.
app/(admin)/leads/page.tsx(151,24): error TS7006: Parameter 'row' implicitly has an 'any' type.
app/(admin)/leads/page.tsx(151,39): error TS7006: Parameter 'field' implicitly has an 'any' type.
app/(admin)/leads/page.tsx(415,62): error TS2339: Property 'isLoading' does not exist on type 'UseTRPCMutationResult<{ value: string; source: string; lastContact: Date | null; responses: { message: string; id: string; contactId: string; sentAt: Date; method: ResponseMethod; }[]; ... 17 more ...; updatedAt: Date; }, TRPCClientErrorLike<...>, { ...; }, unknown>'.
  Property 'isLoading' does not exist on type 'TRPCHookResult & Override<MutationObserverIdleResult<{ value: string; source: string; lastContact: Date | null; responses: { message: string; id: string; contactId: string; sentAt: Date; method: ResponseMethod; }[]; ... 17 more ...; updatedAt: Date; }, TRPCClientErrorLike<...>, { ...; }, unknown>, { ...; }> & { ...; }'.
app/(admin)/leads/page.tsx(421,62): error TS2339: Property 'isLoading' does not exist on type 'UseTRPCMutationResult<{ value: string; source: string; lastContact: Date | null; responses: { message: string; id: string; contactId: string; sentAt: Date; method: ResponseMethod; }[]; ... 17 more ...; updatedAt: Date; }, TRPCClientErrorLike<...>, { ...; }, unknown>'.
  Property 'isLoading' does not exist on type 'TRPCHookResult & Override<MutationObserverIdleResult<{ value: string; source: string; lastContact: Date | null; responses: { message: string; id: string; contactId: string; sentAt: Date; method: ResponseMethod; }[]; ... 17 more ...; updatedAt: Date; }, TRPCClientErrorLike<...>, { ...; }, unknown>, { ...; }> & { ...; }'.
app/(admin)/leads/page.tsx(427,62): error TS2339: Property 'isLoading' does not exist on type 'UseTRPCMutationResult<{ value: string; source: string; lastContact: Date | null; responses: { message: string; id: string; contactId: string; sentAt: Date; method: ResponseMethod; }[]; ... 17 more ...; updatedAt: Date; }, TRPCClientErrorLike<...>, { ...; }, unknown>'.
  Property 'isLoading' does not exist on type 'TRPCHookResult & Override<MutationObserverIdleResult<{ value: string; source: string; lastContact: Date | null; responses: { message: string; id: string; contactId: string; sentAt: Date; method: ResponseMethod; }[]; ... 17 more ...; updatedAt: Date; }, TRPCClientErrorLike<...>, { ...; }, unknown>, { ...; }> & { ...; }'.
app/(admin)/leads/page.tsx(433,62): error TS2339: Property 'isLoading' does not exist on type 'UseTRPCMutationResult<{ value: string; source: string; lastContact: Date | null; responses: { message: string; id: string; contactId: string; sentAt: Date; method: ResponseMethod; }[]; ... 17 more ...; updatedAt: Date; }, TRPCClientErrorLike<...>, { ...; }, unknown>'.
  Property 'isLoading' does not exist on type 'TRPCHookResult & Override<MutationObserverIdleResult<{ value: string; source: string; lastContact: Date | null; responses: { message: string; id: string; contactId: string; sentAt: Date; method: ResponseMethod; }[]; ... 17 more ...; updatedAt: Date; }, TRPCClientErrorLike<...>, { ...; }, unknown>, { ...; }> & { ...; }'.
app/(admin)/leads/page.tsx(439,62): error TS2339: Property 'isLoading' does not exist on type 'UseTRPCMutationResult<{ value: string; source: string; lastContact: Date | null; responses: { message: string; id: string; contactId: string; sentAt: Date; method: ResponseMethod; }[]; ... 17 more ...; updatedAt: Date; }, TRPCClientErrorLike<...>, { ...; }, unknown>'.
  Property 'isLoading' does not exist on type 'TRPCHookResult & Override<MutationObserverIdleResult<{ value: string; source: string; lastContact: Date | null; responses: { message: string; id: string; contactId: string; sentAt: Date; method: ResponseMethod; }[]; ... 17 more ...; updatedAt: Date; }, TRPCClientErrorLike<...>, { ...; }, unknown>, { ...; }> & { ...; }'.
app/(admin)/page.tsx(64,26): error TS2322: Type '{ data: { id: number; header: string; type: string; status: string; target: string; limit: string; reviewer: string; }[]; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'data' does not exist on type 'IntrinsicAttributes'.
app/(admin)/performance/page.tsx(474,34): error TS2339: Property 'pageBreakdown' does not exist on type '{ performanceScore: number; metrics: Record<string, any>; summary: { totalSessions: any; passingSessions: any; }; }'.
app/(admin)/performance/page.tsx(476,34): error TS2339: Property 'pageBreakdown' does not exist on type '{ performanceScore: number; metrics: Record<string, any>; summary: { totalSessions: any; passingSessions: any; }; }'.
app/(admin)/performance/page.tsx(502,46): error TS2339: Property 'pageBreakdown' does not exist on type '{ performanceScore: number; metrics: Record<string, any>; summary: { totalSessions: any; passingSessions: any; }; }'.
app/actions/auth-enhanced.ts(19,3): error TS1484: 'FormState' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
app/api/analytics/web-vitals/route.ts(51,43): error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'Record<string, any> | undefined'.
app/api/analytics/web-vitals/route.ts(69,47): error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'Record<string, any> | undefined'.
app/api/auth/logout/route.ts(9,41): error TS2345: Argument of type '{ req: NextRequest; }' is not assignable to parameter of type 'FetchCreateContextFnOptions'.
  Type '{ req: NextRequest; }' is missing the following properties from type 'FetchCreateContextFnOptions': resHeaders, info
app/api/csp-report/route.ts(9,54): error TS2307: Cannot find module '@/lib/security/csp-enhanced' or its corresponding type declarations.
app/api/csp-report/route.ts(230,12): error TS2538: Type 'undefined' cannot be used as an index type.
app/api/csp-report/route.ts(236,31): error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'PropertyKey'.
  Type 'undefined' is not assignable to type 'PropertyKey'.
app/api/csp-report/route.ts(237,14): error TS2538: Type 'undefined' cannot be used as an index type.
app/api/csp-report/route.ts(265,7): error TS2532: Object is possibly 'undefined'.
app/api/trpc/lib/middleware.ts(109,20): error TS7006: Parameter 'ctx' implicitly has an 'any' type.
app/api/trpc/lib/trpc-unified.ts(64,8): error TS2345: Argument of type 'MiddlewareBuilder<{ req: Request; user?: AdminUser | undefined; }, object, object, unknown>' is not assignable to parameter of type 'MiddlewareBuilder<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, unique symbol> | MiddlewareFunction<TRPCContext, object, object, object, unique symbol>'.
  Type 'MiddlewareBuilder<{ req: Request; user?: AdminUser | undefined; }, object, object, unknown>' is not assignable to type 'MiddlewareBuilder<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, unique symbol>'.
    Types of property 'unstable_pipe' are incompatible.
      Type '<$ContextOverridesOut>(fn: MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, $ContextOverridesOut, unknown> | MiddlewareBuilder<...>) => MiddlewareBuilder<...>' is not assignable to type '<$ContextOverridesOut>(fn: MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, $ContextOverridesOut, unique symbol> | MiddlewareBuilder<...>) => MiddlewareBuilder<...>'.
        Types of parameters 'fn' and 'fn' are incompatible.
          Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol> | MiddlewareBuilder<{ ...; }, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown> | MiddlewareBuilder<{ user: AdminUser | undefined; req: Request; }, object, any, unknown>'.
            Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown> | MiddlewareBuilder<{ user: AdminUser | undefined; req: Request; }, object, any, unknown>'.
              Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown>'.
                Types of parameters 'opts' and 'opts' are incompatible.
                  Type '{ ctx: { user: AdminUser | undefined; req: Request; }; type: "query" | "mutation" | "subscription"; path: string; input: unknown; getRawInput: GetRawInputFn; meta: object | undefined; signal: AbortSignal | undefined; next: { ...; }; }' is not assignable to type '{ ctx: { user: { id: string; email: string; role: string; } | null | undefined; req: Request; }; type: "query" | "mutation" | "subscription"; path: string; input: unique symbol; getRawInput: GetRawInputFn; meta: object | undefined; signal: AbortSignal | undefined; next: { ...; }; }'.
                    The types of 'ctx.user' are incompatible between these types.
                      Type 'AdminUser | undefined' is not assignable to type '{ id: string; email: string; role: string; } | null | undefined'.
                        Property 'email' is missing in type 'AdminUser' but required in type '{ id: string; email: string; role: string; }'.
app/api/trpc/lib/trpc-unified.ts(65,8): error TS2345: Argument of type 'MiddlewareBuilder<{ req: Request; user?: AdminUser | undefined; }, object, object, unknown>' is not assignable to parameter of type 'MiddlewareBuilder<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, unique symbol> | MiddlewareFunction<TRPCContext, object, {}, object, unique symbol>'.
  Type 'MiddlewareBuilder<{ req: Request; user?: AdminUser | undefined; }, object, object, unknown>' is not assignable to type 'MiddlewareBuilder<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, unique symbol>'.
    Types of property 'unstable_pipe' are incompatible.
      Type '<$ContextOverridesOut>(fn: MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, $ContextOverridesOut, unknown> | MiddlewareBuilder<...>) => MiddlewareBuilder<...>' is not assignable to type '<$ContextOverridesOut>(fn: MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, $ContextOverridesOut, unique symbol> | MiddlewareBuilder<...>) => MiddlewareBuilder<...>'.
        Types of parameters 'fn' and 'fn' are incompatible.
          Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol> | MiddlewareBuilder<{ ...; }, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown> | MiddlewareBuilder<{ user: AdminUser | undefined; req: Request; }, object, any, unknown>'.
            Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown> | MiddlewareBuilder<{ user: AdminUser | undefined; req: Request; }, object, any, unknown>'.
              Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown>'.
                Types of parameters 'opts' and 'opts' are incompatible.
                  Type '{ ctx: { user: AdminUser | undefined; req: Request; }; type: "query" | "mutation" | "subscription"; path: string; input: unknown; getRawInput: GetRawInputFn; meta: object | undefined; signal: AbortSignal | undefined; next: { ...; }; }' is not assignable to type '{ ctx: { user: { id: string; email: string; role: string; } | null | undefined; req: Request; }; type: "query" | "mutation" | "subscription"; path: string; input: unique symbol; getRawInput: GetRawInputFn; meta: object | undefined; signal: AbortSignal | undefined; next: { ...; }; }'.
                    The types of 'ctx.user' are incompatible between these types.
                      Type 'AdminUser | undefined' is not assignable to type '{ id: string; email: string; role: string; } | null | undefined'.
                        Property 'email' is missing in type 'AdminUser' but required in type '{ id: string; email: string; role: string; }'.
app/api/trpc/lib/trpc-unified.ts(66,8): error TS2345: Argument of type 'MiddlewareBuilder<{ req: Request; user?: AdminUser | undefined; }, object, object, unknown>' is not assignable to parameter of type 'MiddlewareBuilder<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, unique symbol> | MiddlewareFunction<TRPCContext, object, {}, object, unique symbol>'.
  Type 'MiddlewareBuilder<{ req: Request; user?: AdminUser | undefined; }, object, object, unknown>' is not assignable to type 'MiddlewareBuilder<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, unique symbol>'.
    Types of property 'unstable_pipe' are incompatible.
      Type '<$ContextOverridesOut>(fn: MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, $ContextOverridesOut, unknown> | MiddlewareBuilder<...>) => MiddlewareBuilder<...>' is not assignable to type '<$ContextOverridesOut>(fn: MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, $ContextOverridesOut, unique symbol> | MiddlewareBuilder<...>) => MiddlewareBuilder<...>'.
        Types of parameters 'fn' and 'fn' are incompatible.
          Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol> | MiddlewareBuilder<{ ...; }, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown> | MiddlewareBuilder<{ user: AdminUser | undefined; req: Request; }, object, any, unknown>'.
            Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown> | MiddlewareBuilder<{ user: AdminUser | undefined; req: Request; }, object, any, unknown>'.
              Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown>'.
                Types of parameters 'opts' and 'opts' are incompatible.
                  Type '{ ctx: { user: AdminUser | undefined; req: Request; }; type: "query" | "mutation" | "subscription"; path: string; input: unknown; getRawInput: GetRawInputFn; meta: object | undefined; signal: AbortSignal | undefined; next: { ...; }; }' is not assignable to type '{ ctx: { user: { id: string; email: string; role: string; } | null | undefined; req: Request; }; type: "query" | "mutation" | "subscription"; path: string; input: unique symbol; getRawInput: GetRawInputFn; meta: object | undefined; signal: AbortSignal | undefined; next: { ...; }; }'.
                    The types of 'ctx.user' are incompatible between these types.
                      Type 'AdminUser | undefined' is not assignable to type '{ id: string; email: string; role: string; } | null | undefined'.
                        Property 'email' is missing in type 'AdminUser' but required in type '{ id: string; email: string; role: string; }'.
app/api/trpc/lib/trpc-unified.ts(73,8): error TS2345: Argument of type 'MiddlewareBuilder<{ req: Request; user?: AdminUser | undefined; }, object, object, unknown>' is not assignable to parameter of type 'MiddlewareBuilder<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, unique symbol> | MiddlewareFunction<TRPCContext, object, object, object, unique symbol>'.
  Type 'MiddlewareBuilder<{ req: Request; user?: AdminUser | undefined; }, object, object, unknown>' is not assignable to type 'MiddlewareBuilder<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, unique symbol>'.
    Types of property 'unstable_pipe' are incompatible.
      Type '<$ContextOverridesOut>(fn: MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, $ContextOverridesOut, unknown> | MiddlewareBuilder<...>) => MiddlewareBuilder<...>' is not assignable to type '<$ContextOverridesOut>(fn: MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, $ContextOverridesOut, unique symbol> | MiddlewareBuilder<...>) => MiddlewareBuilder<...>'.
        Types of parameters 'fn' and 'fn' are incompatible.
          Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol> | MiddlewareBuilder<{ ...; }, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown> | MiddlewareBuilder<{ user: AdminUser | undefined; req: Request; }, object, any, unknown>'.
            Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown> | MiddlewareBuilder<{ user: AdminUser | undefined; req: Request; }, object, any, unknown>'.
              Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown>'.
                Types of parameters 'opts' and 'opts' are incompatible.
                  Type '{ ctx: { user: AdminUser | undefined; req: Request; }; type: "query" | "mutation" | "subscription"; path: string; input: unknown; getRawInput: GetRawInputFn; meta: object | undefined; signal: AbortSignal | undefined; next: { ...; }; }' is not assignable to type '{ ctx: { user: { id: string; email: string; role: string; } | null | undefined; req: Request; }; type: "query" | "mutation" | "subscription"; path: string; input: unique symbol; getRawInput: GetRawInputFn; meta: object | undefined; signal: AbortSignal | undefined; next: { ...; }; }'.
                    The types of 'ctx.user' are incompatible between these types.
                      Type 'AdminUser | undefined' is not assignable to type '{ id: string; email: string; role: string; } | null | undefined'.
                        Property 'email' is missing in type 'AdminUser' but required in type '{ id: string; email: string; role: string; }'.
app/api/trpc/lib/trpc-unified.ts(74,8): error TS2345: Argument of type 'MiddlewareBuilder<{ req: Request; user?: AdminUser | undefined; }, object, object, unknown>' is not assignable to parameter of type 'MiddlewareBuilder<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, unique symbol> | MiddlewareFunction<TRPCContext, object, {}, object, unique symbol>'.
  Type 'MiddlewareBuilder<{ req: Request; user?: AdminUser | undefined; }, object, object, unknown>' is not assignable to type 'MiddlewareBuilder<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, unique symbol>'.
    Types of property 'unstable_pipe' are incompatible.
      Type '<$ContextOverridesOut>(fn: MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, $ContextOverridesOut, unknown> | MiddlewareBuilder<...>) => MiddlewareBuilder<...>' is not assignable to type '<$ContextOverridesOut>(fn: MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, $ContextOverridesOut, unique symbol> | MiddlewareBuilder<...>) => MiddlewareBuilder<...>'.
        Types of parameters 'fn' and 'fn' are incompatible.
          Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol> | MiddlewareBuilder<{ ...; }, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown> | MiddlewareBuilder<{ user: AdminUser | undefined; req: Request; }, object, any, unknown>'.
            Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown> | MiddlewareBuilder<{ user: AdminUser | undefined; req: Request; }, object, any, unknown>'.
              Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown>'.
                Types of parameters 'opts' and 'opts' are incompatible.
                  Type '{ ctx: { user: AdminUser | undefined; req: Request; }; type: "query" | "mutation" | "subscription"; path: string; input: unknown; getRawInput: GetRawInputFn; meta: object | undefined; signal: AbortSignal | undefined; next: { ...; }; }' is not assignable to type '{ ctx: { user: { id: string; email: string; role: string; } | null | undefined; req: Request; }; type: "query" | "mutation" | "subscription"; path: string; input: unique symbol; getRawInput: GetRawInputFn; meta: object | undefined; signal: AbortSignal | undefined; next: { ...; }; }'.
                    The types of 'ctx.user' are incompatible between these types.
                      Type 'AdminUser | undefined' is not assignable to type '{ id: string; email: string; role: string; } | null | undefined'.
                        Property 'email' is missing in type 'AdminUser' but required in type '{ id: string; email: string; role: string; }'.
app/api/trpc/lib/trpc-unified.ts(75,8): error TS2345: Argument of type 'MiddlewareBuilder<{ req: Request; user?: AdminUser | undefined; }, object, object, unknown>' is not assignable to parameter of type 'MiddlewareBuilder<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, unique symbol> | MiddlewareFunction<TRPCContext, object, {}, object, unique symbol>'.
  Type 'MiddlewareBuilder<{ req: Request; user?: AdminUser | undefined; }, object, object, unknown>' is not assignable to type 'MiddlewareBuilder<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, unique symbol>'.
    Types of property 'unstable_pipe' are incompatible.
      Type '<$ContextOverridesOut>(fn: MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, $ContextOverridesOut, unknown> | MiddlewareBuilder<...>) => MiddlewareBuilder<...>' is not assignable to type '<$ContextOverridesOut>(fn: MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, $ContextOverridesOut, unique symbol> | MiddlewareBuilder<...>) => MiddlewareBuilder<...>'.
        Types of parameters 'fn' and 'fn' are incompatible.
          Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol> | MiddlewareBuilder<{ ...; }, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown> | MiddlewareBuilder<{ user: AdminUser | undefined; req: Request; }, object, any, unknown>'.
            Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown> | MiddlewareBuilder<{ user: AdminUser | undefined; req: Request; }, object, any, unknown>'.
              Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown>'.
                Types of parameters 'opts' and 'opts' are incompatible.
                  Type '{ ctx: { user: AdminUser | undefined; req: Request; }; type: "query" | "mutation" | "subscription"; path: string; input: unknown; getRawInput: GetRawInputFn; meta: object | undefined; signal: AbortSignal | undefined; next: { ...; }; }' is not assignable to type '{ ctx: { user: { id: string; email: string; role: string; } | null | undefined; req: Request; }; type: "query" | "mutation" | "subscription"; path: string; input: unique symbol; getRawInput: GetRawInputFn; meta: object | undefined; signal: AbortSignal | undefined; next: { ...; }; }'.
                    The types of 'ctx.user' are incompatible between these types.
                      Type 'AdminUser | undefined' is not assignable to type '{ id: string; email: string; role: string; } | null | undefined'.
                        Property 'email' is missing in type 'AdminUser' but required in type '{ id: string; email: string; role: string; }'.
app/api/trpc/lib/trpc-unified.ts(96,8): error TS2345: Argument of type 'MiddlewareBuilder<{ req: Request; user?: AdminUser | undefined; }, object, object, unknown>' is not assignable to parameter of type 'MiddlewareBuilder<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, unique symbol> | MiddlewareFunction<TRPCContext, object, object, object, unique symbol>'.
  Type 'MiddlewareBuilder<{ req: Request; user?: AdminUser | undefined; }, object, object, unknown>' is not assignable to type 'MiddlewareBuilder<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, unique symbol>'.
    Types of property 'unstable_pipe' are incompatible.
      Type '<$ContextOverridesOut>(fn: MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, $ContextOverridesOut, unknown> | MiddlewareBuilder<...>) => MiddlewareBuilder<...>' is not assignable to type '<$ContextOverridesOut>(fn: MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, $ContextOverridesOut, unique symbol> | MiddlewareBuilder<...>) => MiddlewareBuilder<...>'.
        Types of parameters 'fn' and 'fn' are incompatible.
          Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol> | MiddlewareBuilder<{ ...; }, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown> | MiddlewareBuilder<{ user: AdminUser | undefined; req: Request; }, object, any, unknown>'.
            Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown> | MiddlewareBuilder<{ user: AdminUser | undefined; req: Request; }, object, any, unknown>'.
              Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown>'.
                Types of parameters 'opts' and 'opts' are incompatible.
                  Type '{ ctx: { user: AdminUser | undefined; req: Request; }; type: "query" | "mutation" | "subscription"; path: string; input: unknown; getRawInput: GetRawInputFn; meta: object | undefined; signal: AbortSignal | undefined; next: { ...; }; }' is not assignable to type '{ ctx: { user: { id: string; email: string; role: string; } | null | undefined; req: Request; }; type: "query" | "mutation" | "subscription"; path: string; input: unique symbol; getRawInput: GetRawInputFn; meta: object | undefined; signal: AbortSignal | undefined; next: { ...; }; }'.
                    The types of 'ctx.user' are incompatible between these types.
                      Type 'AdminUser | undefined' is not assignable to type '{ id: string; email: string; role: string; } | null | undefined'.
                        Property 'email' is missing in type 'AdminUser' but required in type '{ id: string; email: string; role: string; }'.
app/api/trpc/lib/trpc-unified.ts(97,8): error TS2345: Argument of type 'MiddlewareBuilder<{ req: Request; user?: AdminUser | undefined; }, object, object, unknown>' is not assignable to parameter of type 'MiddlewareBuilder<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, unique symbol> | MiddlewareFunction<TRPCContext, object, {}, object, unique symbol>'.
  Type 'MiddlewareBuilder<{ req: Request; user?: AdminUser | undefined; }, object, object, unknown>' is not assignable to type 'MiddlewareBuilder<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, unique symbol>'.
    Types of property 'unstable_pipe' are incompatible.
      Type '<$ContextOverridesOut>(fn: MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, $ContextOverridesOut, unknown> | MiddlewareBuilder<...>) => MiddlewareBuilder<...>' is not assignable to type '<$ContextOverridesOut>(fn: MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, $ContextOverridesOut, unique symbol> | MiddlewareBuilder<...>) => MiddlewareBuilder<...>'.
        Types of parameters 'fn' and 'fn' are incompatible.
          Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol> | MiddlewareBuilder<{ ...; }, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown> | MiddlewareBuilder<{ user: AdminUser | undefined; req: Request; }, object, any, unknown>'.
            Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown> | MiddlewareBuilder<{ user: AdminUser | undefined; req: Request; }, object, any, unknown>'.
              Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown>'.
                Types of parameters 'opts' and 'opts' are incompatible.
                  Type '{ ctx: { user: AdminUser | undefined; req: Request; }; type: "query" | "mutation" | "subscription"; path: string; input: unknown; getRawInput: GetRawInputFn; meta: object | undefined; signal: AbortSignal | undefined; next: { ...; }; }' is not assignable to type '{ ctx: { user: { id: string; email: string; role: string; } | null | undefined; req: Request; }; type: "query" | "mutation" | "subscription"; path: string; input: unique symbol; getRawInput: GetRawInputFn; meta: object | undefined; signal: AbortSignal | undefined; next: { ...; }; }'.
                    The types of 'ctx.user' are incompatible between these types.
                      Type 'AdminUser | undefined' is not assignable to type '{ id: string; email: string; role: string; } | null | undefined'.
                        Property 'email' is missing in type 'AdminUser' but required in type '{ id: string; email: string; role: string; }'.
app/api/trpc/lib/trpc-unified.ts(98,8): error TS2345: Argument of type 'MiddlewareBuilder<{ req: Request; user?: AdminUser | undefined; }, object, object, unknown>' is not assignable to parameter of type 'MiddlewareBuilder<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, unique symbol> | MiddlewareFunction<TRPCContext, object, {}, object, unique symbol>'.
  Type 'MiddlewareBuilder<{ req: Request; user?: AdminUser | undefined; }, object, object, unknown>' is not assignable to type 'MiddlewareBuilder<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, unique symbol>'.
    Types of property 'unstable_pipe' are incompatible.
      Type '<$ContextOverridesOut>(fn: MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, $ContextOverridesOut, unknown> | MiddlewareBuilder<...>) => MiddlewareBuilder<...>' is not assignable to type '<$ContextOverridesOut>(fn: MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, $ContextOverridesOut, unique symbol> | MiddlewareBuilder<...>) => MiddlewareBuilder<...>'.
        Types of parameters 'fn' and 'fn' are incompatible.
          Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol> | MiddlewareBuilder<{ ...; }, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown> | MiddlewareBuilder<{ user: AdminUser | undefined; req: Request; }, object, any, unknown>'.
            Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown> | MiddlewareBuilder<{ user: AdminUser | undefined; req: Request; }, object, any, unknown>'.
              Type 'MiddlewareFunction<{ user: { id: string; email: string; role: string; } | null | undefined; req: Request; }, object, object, any, unique symbol>' is not assignable to type 'MiddlewareFunction<{ req: Request; user?: AdminUser | undefined; }, object, object, any, unknown>'.
                Types of parameters 'opts' and 'opts' are incompatible.
                  Type '{ ctx: { user: AdminUser | undefined; req: Request; }; type: "query" | "mutation" | "subscription"; path: string; input: unknown; getRawInput: GetRawInputFn; meta: object | undefined; signal: AbortSignal | undefined; next: { ...; }; }' is not assignable to type '{ ctx: { user: { id: string; email: string; role: string; } | null | undefined; req: Request; }; type: "query" | "mutation" | "subscription"; path: string; input: unique symbol; getRawInput: GetRawInputFn; meta: object | undefined; signal: AbortSignal | undefined; next: { ...; }; }'.
                    The types of 'ctx.user' are incompatible between these types.
                      Type 'AdminUser | undefined' is not assignable to type '{ id: string; email: string; role: string; } | null | undefined'.
                        Property 'email' is missing in type 'AdminUser' but required in type '{ id: string; email: string; role: string; }'.
app/api/trpc/routers/analytics.ts(79,13): error TS2322: Type 'Record<string, any> | null' is not assignable to type 'NullableJsonNullValueInput | InputJsonValue | undefined'.
  Type 'null' is not assignable to type 'NullableJsonNullValueInput | InputJsonValue | undefined'.
app/api/trpc/routers/blog.ts(8,45): error TS2305: Module '"../lib/trpc"' has no exported member 'protectedProcedure'.
app/api/trpc/routers/blog.ts(10,10): error TS2305: Module '"@prisma/client"' has no exported member 'PostStatus'.
app/api/trpc/routers/blog.ts(54,34): error TS2339: Property 'blogPost' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/blog.ts(57,34): error TS2339: Property 'blogPost' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/blog.ts(100,33): error TS2339: Property 'blogPost' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/blog.ts(116,22): error TS2339: Property 'blogPost' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/blog.ts(130,34): error TS2339: Property 'blogPost' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/blog.ts(140,21): error TS7006: Parameter 'post' implicitly has an 'any' type.
app/api/trpc/routers/blog.ts(141,33): error TS7006: Parameter 'category' implicitly has an 'any' type.
app/api/trpc/routers/blog.ts(156,34): error TS2339: Property 'blogPost' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/blog.ts(166,21): error TS7006: Parameter 'post' implicitly has an 'any' type.
app/api/trpc/routers/blog.ts(167,27): error TS7006: Parameter 'tag' implicitly has an 'any' type.
app/api/trpc/routers/blog.ts(185,34): error TS2339: Property 'blogPost' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/blog.ts(223,21): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/blog.ts(223,26): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/blog.ts(279,24): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/blog.ts(279,29): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/blog.ts(325,24): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/blog.ts(325,29): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/blog.ts(378,24): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/blog.ts(378,29): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/blog.ts(403,21): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/case-studies.ts(8,45): error TS2305: Module '"../lib/trpc"' has no exported member 'protectedProcedure'.
app/api/trpc/routers/case-studies.ts(10,10): error TS2305: Module '"@prisma/client"' has no exported member 'PostStatus'.
app/api/trpc/routers/case-studies.ts(51,34): error TS2339: Property 'caseStudy' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/case-studies.ts(53,40): error TS2339: Property 'caseStudy' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/case-studies.ts(108,38): error TS2339: Property 'caseStudy' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/case-studies.ts(124,22): error TS2339: Property 'caseStudy' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/case-studies.ts(141,40): error TS2339: Property 'caseStudy' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/case-studies.ts(175,40): error TS2339: Property 'caseStudy' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/case-studies.ts(208,40): error TS2339: Property 'caseStudy' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/case-studies.ts(218,14): error TS7006: Parameter 'cs' implicitly has an 'any' type.
app/api/trpc/routers/case-studies.ts(228,40): error TS2339: Property 'caseStudy' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/case-studies.ts(238,14): error TS7006: Parameter 'cs' implicitly has an 'any' type.
app/api/trpc/routers/case-studies.ts(256,21): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/case-studies.ts(256,26): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/case-studies.ts(335,24): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/case-studies.ts(335,29): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/case-studies.ts(396,24): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/case-studies.ts(396,29): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/case-studies.ts(449,24): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/case-studies.ts(449,29): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/case-studies.ts(477,24): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/case-studies.ts(477,29): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/case-studies.ts(481,35): error TS7006: Parameter 'caseStudyId' implicitly has an 'any' type.
app/api/trpc/routers/case-studies.ts(481,48): error TS7006: Parameter 'index' implicitly has an 'any' type.
app/api/trpc/routers/case-studies.ts(502,21): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/case-studies.ts(536,50): error TS7006: Parameter 'item' implicitly has an 'any' type.
app/api/trpc/routers/newsletter.ts(23,23): error TS2339: Property 'name' does not exist on type '{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; firstName?: string | undefined; lastName?: string | undefined; interests?: string[] | undefined; }'.
app/api/trpc/routers/services.ts(8,45): error TS2305: Module '"../lib/trpc"' has no exported member 'protectedProcedure'.
app/api/trpc/routers/services.ts(38,37): error TS2339: Property 'service' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/services.ts(78,36): error TS2339: Property 'service' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/services.ts(103,37): error TS2339: Property 'service' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/services.ts(133,37): error TS2339: Property 'service' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/services.ts(143,14): error TS7006: Parameter 's' implicitly has an 'any' type.
app/api/trpc/routers/services.ts(161,21): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/services.ts(161,26): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/services.ts(232,24): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/services.ts(232,29): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/services.ts(282,24): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/services.ts(282,29): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/services.ts(319,24): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/services.ts(319,29): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/services.ts(347,24): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/services.ts(347,29): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/services.ts(351,33): error TS7006: Parameter 'serviceId' implicitly has an 'any' type.
app/api/trpc/routers/services.ts(351,44): error TS7006: Parameter 'index' implicitly has an 'any' type.
app/api/trpc/routers/services.ts(372,21): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/testimonials.ts(8,45): error TS2305: Module '"../lib/trpc"' has no exported member 'protectedProcedure'.
app/api/trpc/routers/testimonials.ts(43,41): error TS2339: Property 'testimonial' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/testimonials.ts(79,41): error TS2339: Property 'testimonial' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/testimonials.ts(111,41): error TS2339: Property 'testimonial' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/testimonials.ts(145,16): error TS2339: Property 'testimonial' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/testimonials.ts(148,16): error TS2339: Property 'testimonial' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/testimonials.ts(152,16): error TS2339: Property 'testimonial' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
app/api/trpc/routers/testimonials.ts(167,48): error TS7006: Parameter 'item' implicitly has an 'any' type.
app/api/trpc/routers/testimonials.ts(188,21): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/testimonials.ts(188,26): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/testimonials.ts(256,24): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/testimonials.ts(256,29): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/testimonials.ts(293,24): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/testimonials.ts(293,29): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/testimonials.ts(336,24): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/testimonials.ts(336,29): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/testimonials.ts(365,24): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/testimonials.ts(365,29): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/testimonials.ts(397,24): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/testimonials.ts(397,29): error TS7031: Binding element 'input' implicitly has an 'any' type.
app/api/trpc/routers/testimonials.ts(401,37): error TS7006: Parameter 'testimonialId' implicitly has an 'any' type.
app/api/trpc/routers/testimonials.ts(401,52): error TS7006: Parameter 'index' implicitly has an 'any' type.
app/api/trpc/routers/testimonials.ts(422,21): error TS7031: Binding element 'ctx' implicitly has an 'any' type.
app/api/trpc/routers/testimonials.ts(453,52): error TS7006: Parameter 'item' implicitly has an 'any' type.
app/api/trpc/routers/unified-router.ts(5,3): error TS2305: Module '"../lib/trpc-unified"' has no exported member 'rateLimitMiddleware'.
app/api/trpc/routers/unified-router.ts(11,3): error TS2305: Module '"@/lib/validation/form-schemas"' has no exported member 'buildContactFormSchema'.
app/api/webhooks/cal/route.ts(47,35): error TS2339: Property 'get' does not exist on type 'Promise<ReadonlyHeaders>'.
app/api/webhooks/cal/route.ts(47,73): error TS2339: Property 'get' does not exist on type 'Promise<ReadonlyHeaders>'.
app/api/webhooks/cal/route.ts(48,35): error TS2339: Property 'get' does not exist on type 'Promise<ReadonlyHeaders>'.
app/blog/page.tsx(68,13): error TS2322: Type '{ as: string; text: string; className: string; delay: number; }' is not assignable to type 'IntrinsicAttributes & AnimatedTextProps'.
  Property 'as' does not exist on type 'IntrinsicAttributes & AnimatedTextProps'.
app/blog/page.tsx(74,13): error TS2322: Type '{ as: string; text: string; className: string; delay: number; }' is not assignable to type 'IntrinsicAttributes & AnimatedTextProps'.
  Property 'as' does not exist on type 'IntrinsicAttributes & AnimatedTextProps'.
app/blog/page.tsx(83,27): error TS7006: Parameter 'post' implicitly has an 'any' type.
app/blog/page.tsx(83,33): error TS7006: Parameter 'index' implicitly has an 'any' type.
app/case-studies/page.tsx(75,13): error TS2322: Type '{ as: string; text: string; className: string; delay: number; }' is not assignable to type 'IntrinsicAttributes & AnimatedTextProps'.
  Property 'as' does not exist on type 'IntrinsicAttributes & AnimatedTextProps'.
app/case-studies/page.tsx(81,13): error TS2322: Type '{ as: string; text: string; className: string; delay: number; }' is not assignable to type 'IntrinsicAttributes & AnimatedTextProps'.
  Property 'as' does not exist on type 'IntrinsicAttributes & AnimatedTextProps'.
app/manifest.ts(26,9): error TS2820: Type '"any maskable"' is not assignable to type '"any" | "maskable" | "monochrome" | undefined'. Did you mean '"maskable"'?
app/manifest.ts(32,9): error TS2820: Type '"any maskable"' is not assignable to type '"any" | "maskable" | "monochrome" | undefined'. Did you mean '"maskable"'?
app/portfolio/page.tsx(90,13): error TS2322: Type '{ as: string; text: string; className: string; delay: number; }' is not assignable to type 'IntrinsicAttributes & AnimatedTextProps'.
  Property 'as' does not exist on type 'IntrinsicAttributes & AnimatedTextProps'.
app/portfolio/page.tsx(96,13): error TS2322: Type '{ as: string; text: string; className: string; delay: number; }' is not assignable to type 'IntrinsicAttributes & AnimatedTextProps'.
  Property 'as' does not exist on type 'IntrinsicAttributes & AnimatedTextProps'.
app/services/page.tsx(101,13): error TS2322: Type '{ as: string; text: string; className: string; delay: number; }' is not assignable to type 'IntrinsicAttributes & AnimatedTextProps'.
  Property 'as' does not exist on type 'IntrinsicAttributes & AnimatedTextProps'.
app/services/page.tsx(107,13): error TS2322: Type '{ as: string; text: string; className: string; delay: number; }' is not assignable to type 'IntrinsicAttributes & AnimatedTextProps'.
  Property 'as' does not exist on type 'IntrinsicAttributes & AnimatedTextProps'.
app/services/page.tsx(114,13): error TS2322: Type '{ as: string; text: string; className: string; delay: number; }' is not assignable to type 'IntrinsicAttributes & AnimatedTextProps'.
  Property 'as' does not exist on type 'IntrinsicAttributes & AnimatedTextProps'.
app/services/page.tsx(123,28): error TS7006: Parameter 'service' implicitly has an 'any' type.
app/services/page.tsx(123,37): error TS7006: Parameter 'index' implicitly has an 'any' type.
app/services/page.tsx(150,54): error TS7006: Parameter 'feature' implicitly has an 'any' type.
app/services/page.tsx(150,63): error TS7006: Parameter 'idx' implicitly has an 'any' type.
components/aceternity/animated-testimonials.tsx(114,16): error TS2532: Object is possibly 'undefined'.
components/aceternity/animated-testimonials.tsx(117,16): error TS2532: Object is possibly 'undefined'.
components/aceternity/animated-testimonials.tsx(120,16): error TS2532: Object is possibly 'undefined'.
components/admin/charts/chart-area-interactive.tsx(14,3): error TS1484: 'ChartConfig' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/admin/charts/chart-radial-simple.tsx(15,3): error TS1484: 'ChartConfig' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/admin/dashboard-01/dashboard-widgets.tsx(32,46): error TS2339: Property 'getRecentActivity' does not exist on type 'DecorateRouterRecord<{ ctx: TRPCContext; meta: object; errorShape: { data: { zodError: typeToFlattenedError<any, string> | null; code: "PARSE_ERROR" | "BAD_REQUEST" | ... 16 more ... | "CLIENT_CLOSED_REQUEST"; httpStatus: number; path?: string | undefined; stack?: string | undefined; }; message: string; code: TRPC_E...'.
components/admin/dashboard-01/dashboard-widgets.tsx(69,28): error TS7006: Parameter 'activity' implicitly has an 'any' type.
components/admin/dashboard-01/dashboard-widgets.tsx(218,63): error TS2554: Expected 1-2 arguments, but got 0.
components/admin/dashboard-01/dashboard-widgets.tsx(223,27): error TS2339: Property 'totalLeads' does not exist on type '{ overview: { pageViews: number; uniqueVisitors: number; conversions: number; conversionRate: number; }; breakdown: { topPages: { page: string; views: number; }[]; trafficSources: { source: string; visitors: number; }[]; devices: { ...; }[]; }; }'.
components/admin/dashboard-01/data-table.tsx(12,3): error TS1484: 'ColumnFiltersState' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/admin/dashboard-01/data-table.tsx(13,3): error TS1484: 'SortingState' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/admin/dashboard-01/data-table.tsx(14,3): error TS1484: 'VisibilityState' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/admin/dashboard-01/data-table.tsx(41,19): error TS1484: 'Lead' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/admin/dashboard-01/data-table.tsx(46,59): error TS2339: Property 'getRecentLeads' does not exist on type 'DecorateRouterRecord<{ ctx: TRPCContext; meta: object; errorShape: { data: { zodError: typeToFlattenedError<any, string> | null; code: "PARSE_ERROR" | "BAD_REQUEST" | ... 16 more ... | "CLIENT_CLOSED_REQUEST"; httpStatus: number; path?: string | undefined; stack?: string | undefined; }; message: string; code: TRPC_E...'.
components/admin/dashboard-01/data-table.tsx(52,27): error TS7006: Parameter 'lead' implicitly has an 'any' type.
components/admin/dashboard-01/data-table.tsx(52,33): error TS7006: Parameter 'index' implicitly has an 'any' type.
components/admin/dashboard-01/leads-columns.tsx(9,10): error TS1484: 'ColumnDef' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/admin/dashboard-01/section-cards.tsx(24,85): error TS2554: Expected 1-2 arguments, but got 0.
components/admin/dashboard-01/section-cards.tsx(62,28): error TS2339: Property 'totalLeads' does not exist on type '{ overview: { pageViews: number; uniqueVisitors: number; conversions: number; conversionRate: number; }; breakdown: { topPages: { page: string; views: number; }[]; trafficSources: { source: string; visitors: number; }[]; devices: { ...; }[]; }; }'.
components/admin/dashboard-01/section-cards.tsx(70,28): error TS2339: Property 'totalContacts' does not exist on type '{ overview: { pageViews: number; uniqueVisitors: number; conversions: number; conversionRate: number; }; breakdown: { topPages: { page: string; views: number; }[]; trafficSources: { source: string; visitors: number; }[]; devices: { ...; }[]; }; }'.
components/admin/dashboard-01/section-cards.tsx(78,28): error TS2339: Property 'totalNewsletterSubscribers' does not exist on type '{ overview: { pageViews: number; uniqueVisitors: number; conversions: number; conversionRate: number; }; breakdown: { topPages: { page: string; views: number; }[]; trafficSources: { source: string; visitors: number; }[]; devices: { ...; }[]; }; }'.
components/admin/dashboard-01/section-cards.tsx(94,28): error TS2339: Property 'totalWebVitals' does not exist on type '{ overview: { pageViews: number; uniqueVisitors: number; conversions: number; conversionRate: number; }; breakdown: { topPages: { page: string; views: number; }[]; trafficSources: { source: string; visitors: number; }[]; devices: { ...; }[]; }; }'.
components/admin/dashboard-01/site-header.tsx(61,7): error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.
components/error/error-boundary.tsx(111,19): error TS2345: Argument of type 'Partial<ErrorBoundaryState>' is not assignable to parameter of type 'ErrorBoundaryState | ((prevState: Readonly<ErrorBoundaryState>, props: Readonly<BaseErrorBoundaryProps>) => ErrorBoundaryState | ... 1 more ... | null) | Pick<...> | null'.
  Type 'Partial<ErrorBoundaryState>' is not assignable to type 'Pick<ErrorBoundaryState, keyof ErrorBoundaryState>'.
    Types of property 'error' are incompatible.
      Type 'Error | null | undefined' is not assignable to type 'Error | null'.
        Type 'undefined' is not assignable to type 'Error | null'.
components/error/route-error-boundaries.tsx(3,28): error TS1484: 'ReactNode' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/error/route-error-boundaries.tsx(224,6): error TS2786: 'ErrorBoundaryComponent' cannot be used as a JSX component.
  Its type 'typeof BaseErrorBoundary' is not a valid JSX element type.
    Type 'typeof BaseErrorBoundary' is not assignable to type 'new (props: any) => Component<any, any, any>'.
      Cannot assign an abstract constructor type to a non-abstract constructor type.
components/forms/form-fields.tsx(3,10): error TS1484: 'InputHTMLAttributes' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/forms/form-fields.tsx(3,31): error TS1484: 'ReactNode' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/forms/form-fields.tsx(5,3): error TS1484: 'FieldValues' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/forms/form-fields.tsx(6,3): error TS1484: 'UseFormReturn' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/forms/form-fields.tsx(7,3): error TS1484: 'FieldPath' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/forms/form-fields.tsx(42,11): error TS2320: Interface 'TextFieldProps<T, K>' cannot simultaneously extend types 'BaseFieldProps<T, K>' and 'Omit<InputHTMLAttributes<HTMLInputElement>, "name">'.
  Named property 'form' of types 'BaseFieldProps<T, K>' and 'Omit<InputHTMLAttributes<HTMLInputElement>, "name">' are not identical.
components/forms/lead-magnet-form.tsx(18,3): error TS1484: 'LeadMagnetFormValues' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/forms/newsletter-form.tsx(15,3): error TS1484: 'NewsletterFormValues' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/forms/newsletter-form.tsx(93,5): error TS2322: Type 'Resolver<{ email: string; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; frequency?: "weekly" | "monthly" | undefined; }, any, { ...; }>' is not assignable to type 'Resolver<{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }, any, { ...; }>'.
  Types of parameters 'options' and 'options' are incompatible.
    Type 'ResolverOptions<{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }>' is not assignable to type 'ResolverOptions<{ email: string; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; frequency?: "weekly" | "monthly" | undefined; }>'.
      Type '"weekly" | "monthly" | undefined' is not assignable to type '"weekly" | "monthly"'.
        Type 'undefined' is not assignable to type '"weekly" | "monthly"'.
components/forms/newsletter-form.tsx(96,7): error TS2353: Object literal may only specify known properties, and 'name' does not exist in type 'AsyncDefaultValues<{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }> | { ...; }'.
components/forms/newsletter-form.tsx(183,39): error TS2345: Argument of type '(data: NewsletterFormValues) => Promise<void>' is not assignable to parameter of type 'SubmitHandler<TFieldValues>'.
  Types of parameters 'data' and 'data' are incompatible.
    Type 'TFieldValues' is not assignable to type '{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }'.
      Type 'FieldValues' is missing the following properties from type '{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }': email, frequency
components/forms/newsletter-form.tsx(257,41): error TS2345: Argument of type '(data: NewsletterFormValues) => Promise<void>' is not assignable to parameter of type 'SubmitHandler<TFieldValues>'.
  Types of parameters 'data' and 'data' are incompatible.
    Type 'TFieldValues' is not assignable to type '{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }'.
      Type 'FieldValues' is missing the following properties from type '{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }': email, frequency
components/forms/newsletter-form.tsx(260,13): error TS2322: Type 'UseFormReturn<{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }, any, TFieldValues>' is not assignable to type 'UseFormReturn<{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }>'.
  Types of property 'handleSubmit' are incompatible.
    Type 'UseFormHandleSubmit<{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }, TFieldValues>' is not assignable to type 'UseFormHandleSubmit<{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }, { ...; }>'.
      Types of parameters 'onValid' and 'onValid' are incompatible.
        Types of parameters 'data' and 'data' are incompatible.
          Type 'TFieldValues' is not assignable to type '{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }'.
            Type 'FieldValues' is missing the following properties from type '{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }': email, frequency
components/forms/newsletter-form.tsx(261,13): error TS2322: Type '"name"' is not assignable to type '"email" | "source" | "interests" | "firstName" | "lastName" | "frequency" | `interests.${number}`'.
components/forms/newsletter-form.tsx(269,11): error TS2322: Type 'UseFormReturn<{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }, any, TFieldValues>' is not assignable to type 'UseFormReturn<{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }>'.
  Types of property 'handleSubmit' are incompatible.
    Type 'UseFormHandleSubmit<{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }, TFieldValues>' is not assignable to type 'UseFormHandleSubmit<{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }, { ...; }>'.
      Types of parameters 'onValid' and 'onValid' are incompatible.
        Types of parameters 'data' and 'data' are incompatible.
          Type 'TFieldValues' is not assignable to type '{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }'.
            Type 'FieldValues' is missing the following properties from type '{ email: string; frequency: "weekly" | "monthly"; source?: string | undefined; interests?: string[] | undefined; firstName?: string | undefined; lastName?: string | undefined; }': email, frequency
components/forms/server-action-lead-magnet-form.tsx(39,5): error TS2769: No overload matches this call.
  Overload 1 of 2, '(action: (state: { success: boolean; message: string; errors: ZodIssue[]; } | { success: boolean; message: string; errors?: undefined; }) => { success: boolean; message: string; errors: ZodIssue[]; } | { ...; } | Promise<...>, initialState: { ...; } | { ...; }, permalink?: string | undefined): [state: ...]', gave the following error.
    Argument of type '(prevState: FormState, formData: FormData) => Promise<{ success: boolean; message: string; errors: ZodIssue[]; } | { success: boolean; message: string; errors?: undefined; }>' is not assignable to parameter of type '(state: { success: boolean; message: string; errors: ZodIssue[]; } | { success: boolean; message: string; errors?: undefined; }) => { success: boolean; message: string; errors: ZodIssue[]; } | { ...; } | Promise<...>'.
      Target signature provides too few arguments. Expected 2 or more, but got 1.
  Overload 2 of 2, '(action: (state: { success: boolean; message: string; errors: ZodIssue[]; } | { success: boolean; message: string; errors?: undefined; }, payload: FormData) => { success: boolean; message: string; errors: ZodIssue[]; } | { ...; } | Promise<...>, initialState: { ...; } | { ...; }, permalink?: string | undefined): [state: ...]', gave the following error.
    Argument of type '(prevState: FormState, formData: FormData) => Promise<{ success: boolean; message: string; errors: ZodIssue[]; } | { success: boolean; message: string; errors?: undefined; }>' is not assignable to parameter of type '(state: { success: boolean; message: string; errors: ZodIssue[]; } | { success: boolean; message: string; errors?: undefined; }, payload: FormData) => { success: boolean; message: string; errors: ZodIssue[]; } | { ...; } | Promise<...>'.
      Types of parameters 'prevState' and 'state' are incompatible.
        Type '{ success: boolean; message: string; errors: ZodIssue[]; } | { success: boolean; message: string; errors?: undefined; }' is not assignable to type 'FormState'.
          Type '{ success: boolean; message: string; errors: z.ZodIssue[]; }' is not assignable to type 'FormState'.
            Types of property 'errors' are incompatible.
              Type 'ZodIssue[]' is not assignable to type '{ path: string[]; message: string; }[]'.
                Type 'ZodIssue' is not assignable to type '{ path: string[]; message: string; }'.
                  Type 'ZodCustomIssue & { fatal?: boolean | undefined; message: string; }' is not assignable to type '{ path: string[]; message: string; }'.
                    Types of property 'path' are incompatible.
                      Type '(string | number)[]' is not assignable to type 'string[]'.
                        Type 'string | number' is not assignable to type 'string'.
                          Type 'number' is not assignable to type 'string'.
components/forms/server-action-lead-magnet-form.tsx(61,46): error TS2345: Argument of type 'ZodIssue[] | undefined' is not assignable to parameter of type '{ path: string[]; message: string; }[] | undefined'.
  Type 'ZodIssue[]' is not assignable to type '{ path: string[]; message: string; }[]'.
    Type 'ZodIssue' is not assignable to type '{ path: string[]; message: string; }'.
      Type 'ZodCustomIssue & { fatal?: boolean | undefined; message: string; }' is not assignable to type '{ path: string[]; message: string; }'.
        Types of property 'path' are incompatible.
          Type '(string | number)[]' is not assignable to type 'string[]'.
            Type 'string | number' is not assignable to type 'string'.
              Type 'number' is not assignable to type 'string'.
components/forms/server-action-lead-magnet-form.tsx(64,34): error TS2345: Argument of type 'ZodIssue[] | undefined' is not assignable to parameter of type '{ path: string[]; message: string; }[] | undefined'.
  Type 'ZodIssue[]' is not assignable to type '{ path: string[]; message: string; }[]'.
    Type 'ZodIssue' is not assignable to type '{ path: string[]; message: string; }'.
      Type 'ZodCustomIssue & { fatal?: boolean | undefined; message: string; }' is not assignable to type '{ path: string[]; message: string; }'.
        Types of property 'path' are incompatible.
          Type '(string | number)[]' is not assignable to type 'string[]'.
            Type 'string | number' is not assignable to type 'string'.
              Type 'number' is not assignable to type 'string'.
components/forms/server-action-lead-magnet-form.tsx(66,38): error TS2345: Argument of type 'ZodIssue[] | undefined' is not assignable to parameter of type '{ path: string[]; message: string; }[] | undefined'.
  Type 'ZodIssue[]' is not assignable to type '{ path: string[]; message: string; }[]'.
    Type 'ZodIssue' is not assignable to type '{ path: string[]; message: string; }'.
      Type 'ZodCustomIssue & { fatal?: boolean | undefined; message: string; }' is not assignable to type '{ path: string[]; message: string; }'.
        Types of property 'path' are incompatible.
          Type '(string | number)[]' is not assignable to type 'string[]'.
            Type 'string | number' is not assignable to type 'string'.
              Type 'number' is not assignable to type 'string'.
components/forms/server-action-lead-magnet-form.tsx(79,47): error TS2345: Argument of type 'ZodIssue[] | undefined' is not assignable to parameter of type '{ path: string[]; message: string; }[] | undefined'.
  Type 'ZodIssue[]' is not assignable to type '{ path: string[]; message: string; }[]'.
    Type 'ZodIssue' is not assignable to type '{ path: string[]; message: string; }'.
      Type 'ZodCustomIssue & { fatal?: boolean | undefined; message: string; }' is not assignable to type '{ path: string[]; message: string; }'.
        Types of property 'path' are incompatible.
          Type '(string | number)[]' is not assignable to type 'string[]'.
            Type 'string | number' is not assignable to type 'string'.
              Type 'number' is not assignable to type 'string'.
components/forms/server-action-lead-magnet-form.tsx(82,35): error TS2345: Argument of type 'ZodIssue[] | undefined' is not assignable to parameter of type '{ path: string[]; message: string; }[] | undefined'.
  Type 'ZodIssue[]' is not assignable to type '{ path: string[]; message: string; }[]'.
    Type 'ZodIssue' is not assignable to type '{ path: string[]; message: string; }'.
      Type 'ZodCustomIssue & { fatal?: boolean | undefined; message: string; }' is not assignable to type '{ path: string[]; message: string; }'.
        Types of property 'path' are incompatible.
          Type '(string | number)[]' is not assignable to type 'string[]'.
            Type 'string | number' is not assignable to type 'string'.
              Type 'number' is not assignable to type 'string'.
components/forms/server-action-lead-magnet-form.tsx(84,39): error TS2345: Argument of type 'ZodIssue[] | undefined' is not assignable to parameter of type '{ path: string[]; message: string; }[] | undefined'.
  Type 'ZodIssue[]' is not assignable to type '{ path: string[]; message: string; }[]'.
    Type 'ZodIssue' is not assignable to type '{ path: string[]; message: string; }'.
      Type 'ZodCustomIssue & { fatal?: boolean | undefined; message: string; }' is not assignable to type '{ path: string[]; message: string; }'.
        Types of property 'path' are incompatible.
          Type '(string | number)[]' is not assignable to type 'string[]'.
            Type 'string | number' is not assignable to type 'string'.
              Type 'number' is not assignable to type 'string'.
components/forms/server-action-lead-magnet-form.tsx(104,38): error TS2345: Argument of type 'ZodIssue[] | undefined' is not assignable to parameter of type '{ path: string[]; message: string; }[] | undefined'.
  Type 'ZodIssue[]' is not assignable to type '{ path: string[]; message: string; }[]'.
    Type 'ZodIssue' is not assignable to type '{ path: string[]; message: string; }'.
      Type 'ZodCustomIssue & { fatal?: boolean | undefined; message: string; }' is not assignable to type '{ path: string[]; message: string; }'.
        Types of property 'path' are incompatible.
          Type '(string | number)[]' is not assignable to type 'string[]'.
            Type 'string | number' is not assignable to type 'string'.
              Type 'number' is not assignable to type 'string'.
components/forms/server-action-lead-magnet-form.tsx(106,42): error TS2345: Argument of type 'ZodIssue[] | undefined' is not assignable to parameter of type '{ path: string[]; message: string; }[] | undefined'.
  Type 'ZodIssue[]' is not assignable to type '{ path: string[]; message: string; }[]'.
    Type 'ZodIssue' is not assignable to type '{ path: string[]; message: string; }'.
      Type 'ZodCustomIssue & { fatal?: boolean | undefined; message: string; }' is not assignable to type '{ path: string[]; message: string; }'.
        Types of property 'path' are incompatible.
          Type '(string | number)[]' is not assignable to type 'string[]'.
            Type 'string | number' is not assignable to type 'string'.
              Type 'number' is not assignable to type 'string'.
components/lazy/lazy-components.tsx(62,3): error TS2345: Argument of type '() => Promise<typeof import("/Users/richard/business-website/components/animated/floating-elements")>' is not assignable to parameter of type 'DynamicOptions<{}> | Loader<{}>'.
  Type '() => Promise<typeof import("/Users/richard/business-website/components/animated/floating-elements")>' is not assignable to type '() => LoaderComponent<{}>'.
    Type 'Promise<typeof import("/Users/richard/business-website/components/animated/floating-elements")>' is not assignable to type 'LoaderComponent<{}>'.
      Type 'typeof import("/Users/richard/business-website/components/animated/floating-elements")' is not assignable to type 'ComponentType<{}> | ComponentModule<{}>'.
components/lazy/lazy-components.tsx(70,3): error TS2345: Argument of type '() => Promise<typeof import("/Users/richard/business-website/components/animated/gradient-background")>' is not assignable to parameter of type 'DynamicOptions<{}> | Loader<{}>'.
  Type '() => Promise<typeof import("/Users/richard/business-website/components/animated/gradient-background")>' is not assignable to type '() => LoaderComponent<{}>'.
    Type 'Promise<typeof import("/Users/richard/business-website/components/animated/gradient-background")>' is not assignable to type 'LoaderComponent<{}>'.
      Type 'typeof import("/Users/richard/business-website/components/animated/gradient-background")' is not assignable to type 'ComponentType<{}> | ComponentModule<{}>'.
components/lazy/lazy-components.tsx(78,3): error TS2345: Argument of type '() => Promise<typeof import("/Users/richard/business-website/components/animated/animated-card")>' is not assignable to parameter of type 'DynamicOptions<{}> | Loader<{}>'.
  Type '() => Promise<typeof import("/Users/richard/business-website/components/animated/animated-card")>' is not assignable to type '() => LoaderComponent<{}>'.
    Type 'Promise<typeof import("/Users/richard/business-website/components/animated/animated-card")>' is not assignable to type 'LoaderComponent<{}>'.
      Type 'typeof import("/Users/richard/business-website/components/animated/animated-card")' is not assignable to type 'ComponentType<{}> | ComponentModule<{}>'.
components/lazy/lazy-components.tsx(86,3): error TS2345: Argument of type '() => Promise<typeof import("/Users/richard/business-website/components/animated/animated-text")>' is not assignable to parameter of type 'DynamicOptions<{}> | Loader<{}>'.
  Type '() => Promise<typeof import("/Users/richard/business-website/components/animated/animated-text")>' is not assignable to type '() => LoaderComponent<{}>'.
    Type 'Promise<typeof import("/Users/richard/business-website/components/animated/animated-text")>' is not assignable to type 'LoaderComponent<{}>'.
      Type 'typeof import("/Users/richard/business-website/components/animated/animated-text")' is not assignable to type 'ComponentType<{}> | ComponentModule<{}>'.
components/lazy/lazy-components.tsx(141,3): error TS2345: Argument of type '() => Promise<typeof import("/Users/richard/business-website/components/testimonials-carousel")>' is not assignable to parameter of type 'DynamicOptions<{}> | Loader<{}>'.
  Type '() => Promise<typeof import("/Users/richard/business-website/components/testimonials-carousel")>' is not assignable to type '() => LoaderComponent<{}>'.
    Type 'Promise<typeof import("/Users/richard/business-website/components/testimonials-carousel")>' is not assignable to type 'LoaderComponent<{}>'.
      Type 'typeof import("/Users/richard/business-website/components/testimonials-carousel")' is not assignable to type 'ComponentType<{}> | ComponentModule<{}>'.
components/lazy/lazy-components.tsx(151,3): error TS2345: Argument of type '() => Promise<typeof import("/Users/richard/business-website/components/forms/contact-form")>' is not assignable to parameter of type 'DynamicOptions<{}> | Loader<{}>'.
  Type '() => Promise<typeof import("/Users/richard/business-website/components/forms/contact-form")>' is not assignable to type '() => LoaderComponent<{}>'.
    Type 'Promise<typeof import("/Users/richard/business-website/components/forms/contact-form")>' is not assignable to type 'LoaderComponent<{}>'.
      Type 'typeof import("/Users/richard/business-website/components/forms/contact-form")' is not assignable to type 'ComponentType<{}> | ComponentModule<{}>'.
components/lazy/lazy-components.tsx(159,3): error TS2345: Argument of type '() => Promise<typeof import("/Users/richard/business-website/components/forms/lead-magnet-form")>' is not assignable to parameter of type 'DynamicOptions<{}> | Loader<{}>'.
  Type '() => Promise<typeof import("/Users/richard/business-website/components/forms/lead-magnet-form")>' is not assignable to type '() => LoaderComponent<{}>'.
    Type 'Promise<typeof import("/Users/richard/business-website/components/forms/lead-magnet-form")>' is not assignable to type 'LoaderComponent<{}>'.
      Type 'typeof import("/Users/richard/business-website/components/forms/lead-magnet-form")' is not assignable to type 'ComponentType<{}> | ComponentModule<{}>'.
components/lazy/lazy-components.tsx(167,3): error TS2345: Argument of type '() => Promise<typeof import("/Users/richard/business-website/components/forms/newsletter-form")>' is not assignable to parameter of type 'DynamicOptions<{}> | Loader<{}>'.
  Type '() => Promise<typeof import("/Users/richard/business-website/components/forms/newsletter-form")>' is not assignable to type '() => LoaderComponent<{}>'.
    Type 'Promise<typeof import("/Users/richard/business-website/components/forms/newsletter-form")>' is not assignable to type 'LoaderComponent<{}>'.
      Type 'typeof import("/Users/richard/business-website/components/forms/newsletter-form")' is not assignable to type 'ComponentType<{}> | ComponentModule<{}>'.
components/lazy/lazy-components.tsx(205,5): error TS2322: Type 'ComponentType<{}>' is not assignable to type '((loadingProps: DynamicOptionsLoadingProps) => ReactNode) | undefined'.
  Type 'ComponentClass<{}, any>' is not assignable to type '(loadingProps: DynamicOptionsLoadingProps) => ReactNode'.
    Type 'ComponentClass<{}, any>' provides no match for the signature '(loadingProps: DynamicOptionsLoadingProps): ReactNode'.
components/lazy/lazy-wrapper.tsx(3,33): error TS1484: 'ComponentType' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/lazy/lazy-wrapper.tsx(43,10): error TS2322: Type 'RefObject<Element>' is not assignable to type 'Ref<HTMLDivElement> | undefined'.
  Type 'RefObject<Element>' is not assignable to type 'RefObject<HTMLDivElement | null>'.
    Type 'Element' is missing the following properties from type 'HTMLDivElement': align, accessKey, accessKeyLabel, autocapitalize, and 127 more.
components/lazy/lazy-wrapper.tsx(87,12): error TS2322: Type 'RefObject<Element>' is not assignable to type 'Ref<HTMLDivElement> | undefined'.
  Type 'RefObject<Element>' is not assignable to type 'RefObject<HTMLDivElement | null>'.
    Type 'Element' is missing the following properties from type 'HTMLDivElement': align, accessKey, accessKeyLabel, autocapitalize, and 127 more.
components/lazy/lazy-wrapper.tsx(89,12): error TS2322: Type 'PropsWithoutRef<P> & { ref: ForwardedRef<any>; }' is not assignable to type 'IntrinsicAttributes & P'.
  Type 'PropsWithoutRef<P> & { ref: ForwardedRef<any>; }' is not assignable to type 'P'.
    'PropsWithoutRef<P> & { ref: ForwardedRef<any>; }' is assignable to the constraint of type 'P', but 'P' could be instantiated with a different subtype of constraint 'object'.
components/lazy/lazy-wrapper.tsx(99,3): error TS2322: Type 'ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<any>>' is not assignable to type 'ComponentType<P>'.
  Type 'ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<any>>' is not assignable to type 'FunctionComponent<P>'.
    Types of parameters 'props' and 'props' are incompatible.
      Type 'P' is not assignable to type 'PropsWithoutRef<P> & RefAttributes<any>'.
        Type 'object' is not assignable to type 'PropsWithoutRef<P> & RefAttributes<any>'.
          Type 'object' is not assignable to type 'PropsWithoutRef<P>'.
            Type 'P' is not assignable to type 'PropsWithoutRef<P>'.
              Type 'object' is not assignable to type 'PropsWithoutRef<P>'.
components/lazy/lazy-wrapper.tsx(151,10): error TS2322: Type 'RefObject<Element>' is not assignable to type 'Ref<HTMLDivElement> | undefined'.
  Type 'RefObject<Element>' is not assignable to type 'RefObject<HTMLDivElement | null>'.
    Type 'Element' is missing the following properties from type 'HTMLDivElement': align, accessKey, accessKeyLabel, autocapitalize, and 127 more.
components/marketing/exit-intent-popup.tsx(92,10): error TS2304: Cannot find name 'm'.
components/marketing/exit-intent-popup.tsx(106,12): error TS2304: Cannot find name 'm'.
components/marketing/exit-intent-popup.tsx(181,13): error TS2304: Cannot find name 'm'.
components/marketing/exit-intent-popup.tsx(182,11): error TS2304: Cannot find name 'm'.
components/providers/animation-provider.tsx(8,3): error TS1484: 'ReactNode' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/providers/context-providers.tsx(3,44): error TS1484: 'ReactNode' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/providers/context-providers.tsx(66,18): error TS2339: Property 'gtag' does not exist on type 'Window & typeof globalThis'.
components/providers/context-providers.tsx(67,16): error TS2339: Property 'gtag' does not exist on type 'Window & typeof globalThis'.
components/providers/context-providers.tsx(71,18): error TS2339: Property 'posthog' does not exist on type 'Window & typeof globalThis'.
components/providers/context-providers.tsx(72,16): error TS2339: Property 'posthog' does not exist on type 'Window & typeof globalThis'.
components/providers/context-providers.tsx(81,18): error TS2339: Property 'posthog' does not exist on type 'Window & typeof globalThis'.
components/providers/context-providers.tsx(82,16): error TS2339: Property 'posthog' does not exist on type 'Window & typeof globalThis'.
components/sections/homepage-services.tsx(80,26): error TS7006: Parameter 'service' implicitly has an 'any' type.
components/sections/homepage-services.tsx(80,35): error TS7006: Parameter 'index' implicitly has an 'any' type.
components/sections/homepage-services.tsx(109,64): error TS7006: Parameter 'feature' implicitly has an 'any' type.
components/sections/homepage-services.tsx(109,73): error TS7006: Parameter 'idx' implicitly has an 'any' type.
components/sections/homepage-services.tsx(118,59): error TS2532: Object is possibly 'undefined'.
components/sections/lead-magnet-section.tsx(16,3): error TS1484: 'LeadMagnetResource' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/sections/lead-magnet-section.tsx(94,9): error TS18048: 'selectedResource' is possibly 'undefined'.
components/sections/lead-magnet-section.tsx(95,12): error TS18048: 'selectedResource' is possibly 'undefined'.
components/sections/lead-magnet-section.tsx(96,18): error TS18048: 'selectedResource' is possibly 'undefined'.
components/sections/lead-magnet-section.tsx(97,15): error TS18048: 'selectedResource' is possibly 'undefined'.
components/sections/lead-magnet-section.tsx(98,19): error TS18048: 'selectedResource' is possibly 'undefined'.
components/sections/lead-magnet-section.tsx(124,19): error TS18048: 'selectedResource' is possibly 'undefined'.
components/sections/lead-magnet-section.tsx(152,44): error TS18048: 'selectedResource' is possibly 'undefined'.
components/sections/lead-magnet-section.tsx(153,43): error TS18048: 'selectedResource' is possibly 'undefined'.
components/sections/section.tsx(6,10): error TS1484: 'SectionProps' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/sections/section.tsx(6,24): error TS1484: 'AnimatedSectionProps' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/sections/section.tsx(105,16): error TS2339: Property 'isInView' does not exist on type '{ ref: (node?: Element | null | undefined) => void; inView: boolean; }'.
components/sections/services-section-server.tsx(18,42): error TS7006: Parameter 'service' implicitly has an 'any' type.
components/sections/services-section.tsx(38,3): error TS1484: 'ServicesSectionProps' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/sections/services-section.tsx(39,3): error TS1484: 'ServiceItem' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/sections/testimonials-section.tsx(98,32): error TS2322: Type 'import("/Users/richard/business-website/components/sections/testimonials-section").Testimonial[]' is not assignable to type 'Testimonial[]'.
  Type 'Testimonial' is missing the following properties from type 'Testimonial': quote, designation, src
components/sections/testimonials-section.tsx(151,35): error TS2322: Type 'import("/Users/richard/business-website/components/sections/testimonials-section").Testimonial[]' is not assignable to type 'Testimonial[]'.
  Type 'Testimonial' is missing the following properties from type 'Testimonial': quote, designation, src
components/security/honeypot-field.tsx(34,9): error TS2353: Object literal may only specify known properties, and 'tabIndex' does not exist in type 'Properties<string | number, string & {}>'.
components/service-card-server.tsx(14,10): error TS1484: 'ServiceCardProps' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/service-card-server.tsx(29,3): error TS2339: Property 'features' does not exist on type 'ServiceCardServerProps'.
components/service-card-server.tsx(50,14): error TS2604: JSX element type 'Icon' does not have any construct or call signatures.
components/service-card-server.tsx(50,14): error TS2786: 'Icon' cannot be used as a JSX component.
  Its type 'string | number | bigint | true | ReactElement<unknown, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | Promise<...>' is not a valid JSX element type.
    Type 'number' is not assignable to type 'ElementType'.
components/service-card-server.tsx(66,28): error TS7006: Parameter 'feature' implicitly has an 'any' type.
components/service-card-server.tsx(66,37): error TS7006: Parameter 'index' implicitly has an 'any' type.
components/service-card.tsx(20,10): error TS1484: 'ServiceCardProps' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/service-card.tsx(39,63): error TS2769: No overload matches this call.
  The last overload gave the following error.
    Object literal may only specify known properties, and 'className' does not exist in type 'Partial<unknown> & Attributes'.
components/streaming/blog-posts-stream.tsx(18,19): error TS7006: Parameter 'post' implicitly has an 'any' type.
components/streaming/dashboard-data-parallel.tsx(47,26): error TS7006: Parameter 'service' implicitly has an 'any' type.
components/streaming/dashboard-data-parallel.tsx(60,29): error TS7006: Parameter 'study' implicitly has an 'any' type.
components/streaming/dashboard-data-parallel.tsx(73,42): error TS7006: Parameter 'testimonial' implicitly has an 'any' type.
components/streaming/dashboard-data-parallel.tsx(141,28): error TS7006: Parameter 'service' implicitly has an 'any' type.
components/ui/external-video.tsx(8,10): error TS1484: 'ExternalVideoConfig' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/ui/external-video.tsx(306,7): error TS2322: Type 'number | undefined' is not assignable to type 'string | number | boolean'.
  Type 'undefined' is not assignable to type 'string | number | boolean'.
components/ui/external-video.tsx(307,7): error TS2322: Type 'number | undefined' is not assignable to type 'string | number | boolean'.
  Type 'undefined' is not assignable to type 'string | number | boolean'.
components/ui/external-video.tsx(349,7): error TS2322: Type 'string | undefined' is not assignable to type 'string | number | boolean'.
  Type 'undefined' is not assignable to type 'string | number | boolean'.
components/ui/optimized-image.tsx(1,17): error TS1484: 'ImageProps' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/ui/sidebar.tsx(347,6): error TS2322: Type '{ ref?: Ref<HTMLButtonElement> | undefined; key?: Key | null | undefined; disabled?: boolean | undefined; form?: string | undefined; formAction?: string | ((formData: FormData) => void | Promise<...>) | undefined; ... 285 more ...; className: string; }' is not assignable to type 'ClassAttributes<HTMLDivElement>'.
  Types of property 'ref' are incompatible.
    Type 'Ref<HTMLButtonElement> | undefined' is not assignable to type 'Ref<HTMLDivElement> | undefined'.
      Type 'RefObject<HTMLButtonElement | null>' is not assignable to type 'Ref<HTMLDivElement> | undefined'.
        Type 'RefObject<HTMLButtonElement | null>' is not assignable to type 'RefObject<HTMLDivElement | null>'.
          Type 'HTMLButtonElement | null' is not assignable to type 'HTMLDivElement | null'.
            Property 'align' is missing in type 'HTMLButtonElement' but required in type 'HTMLDivElement'.
components/ui/video-player.tsx(5,10): error TS1484: 'VideoPlayerOptions' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/ui/video-player.tsx(5,30): error TS1484: 'VideoFormat' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/ui/video-player.tsx(5,43): error TS1484: 'VideoSubtitle' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
components/ui/video-player.tsx(231,27): error TS18048: 'entry' is possibly 'undefined'.
components/ui/video-player.tsx(327,13): error TS18048: 'entry' is possibly 'undefined'.
hooks/use-form-state.ts(16,11): error TS2430: Interface 'FormStateOptions<T>' incorrectly extends interface 'Partial<{ mode: "onBlur" | "onChange" | "onSubmit" | "all" | "onTouched"; disabled: boolean; reValidateMode: "onBlur" | "onChange" | "onSubmit"; defaultValues: AsyncDefaultValues<T> | DefaultValues<...>; ... 11 more ...; formControl?: Omit<...> | undefined; }>'.
  Types of property 'defaultValues' are incompatible.
    Type 'Partial<T> | undefined' is not assignable to type 'AsyncDefaultValues<T> | DefaultValues<T> | undefined'.
      Type 'Partial<T>' is not assignable to type 'AsyncDefaultValues<T> | DefaultValues<T> | undefined'.
hooks/use-form-state.ts(42,5): error TS2322: Type 'T' is not assignable to type 'AsyncDefaultValues<T> | DefaultValues<T> | undefined'.
  Type 'FieldValues' is not assignable to type 'AsyncDefaultValues<T> | DefaultValues<T> | undefined'.
hooks/use-form-state.ts(84,37): error TS2345: Argument of type '(values: T) => Promise<void>' is not assignable to parameter of type 'SubmitHandler<TFieldValues>'.
  Types of parameters 'values' and 'data' are incompatible.
    Type 'TFieldValues' is not assignable to type 'T'.
      'TFieldValues' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'FieldValues'.
hooks/use-form-state.ts(106,25): error TS2344: Type 'FormState<T>' does not satisfy the constraint '(...args: any) => any'.
  Type 'FormState<T>' provides no match for the signature '(...args: any): any'.
hooks/use-intersection-observer-modern.ts(30,39): error TS18048: 'entry' is possibly 'undefined'.
hooks/use-intersection-observer-modern.ts(36,23): error TS2345: Argument of type 'IntersectionObserverEntry | undefined' is not assignable to parameter of type 'IntersectionObserverEntry'.
  Type 'undefined' is not assignable to type 'IntersectionObserverEntry'.
hooks/use-intersection-observer-modern.ts(38,19): error TS2345: Argument of type 'IntersectionObserverEntry | undefined' is not assignable to parameter of type 'IntersectionObserverEntry'.
  Type 'undefined' is not assignable to type 'IntersectionObserverEntry'.
hooks/use-intersection-observer.ts(30,23): error TS18048: 'entry' is possibly 'undefined'.
hooks/use-intersection-observer.ts(47,11): error TS2322: Type 'RefObject<Element | null>' is not assignable to type 'RefObject<Element>'.
  Type 'Element | null' is not assignable to type 'Element'.
    Type 'null' is not assignable to type 'Element'.
hooks/use-page-analytics.ts(63,11): error TS2322: Type '"engagement"' is not assignable to type 'EventCategory | undefined'.
lib/auth/auth-enhanced.ts(148,12): error TS2352: Conversion of type 'JWTPayload' to type 'SessionPayload' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'JWTPayload' is missing the following properties from type 'SessionPayload': userId, username, role, expiresAt
lib/auth/auth-enhanced.ts(575,15): error TS2484: Export declaration conflicts with exported declaration of 'User'.
lib/auth/auth-enhanced.ts(575,21): error TS2484: Export declaration conflicts with exported declaration of 'Session'.
lib/auth/auth-enhanced.ts(575,30): error TS2484: Export declaration conflicts with exported declaration of 'SessionPayload'.
lib/auth/auth-enhanced.ts(575,46): error TS2484: Export declaration conflicts with exported declaration of 'FormState'.
lib/auth/clerk-supabase-wrapper.ts(8,35): error TS2307: Cannot find module '@clerk/nextjs/server' or its corresponding type declarations.
lib/auth/clerk-supabase-wrapper.ts(181,20): error TS2345: Argument of type 'SupabaseClient<any, "public", any>' is not assignable to parameter of type 'Promise<SupabaseClient<any, "public", any>>'.
  Type 'SupabaseClient<any, "public", any>' is missing the following properties from type 'Promise<SupabaseClient<any, "public", any>>': then, catch, finally, [Symbol.toStringTag]
lib/auth/jwt.ts(58,7): error TS2322: Type 'unknown' is not assignable to type 'string | undefined'.
lib/auth/session-revocation.ts(18,37): error TS1484: 'SessionPayload' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
lib/auth/session-revocation.ts(19,10): error TS2305: Module '"@/lib/auth/jwt"' has no exported member 'decrypt'.
lib/cache/query-cache.ts(59,26): error TS2345: Argument of type '{ defaultOptions: { queries: { staleTime: number; gcTime: number; retry: (failureCount: number, error: any) => boolean; retryDelay: (attemptIndex: number) => number; refetchOnWindowFocus: boolean; refetchOnReconnect: string; refetchOnMount: boolean; networkMode: string; }; mutations: { ...; }; }; }' is not assignable to parameter of type 'QueryClientConfig'.
  The types of 'defaultOptions.queries.networkMode' are incompatible between these types.
    Type 'string' is not assignable to type 'NetworkMode | undefined'.
lib/client-utils.ts(104,47): error TS2339: Property 'gtag' does not exist on type 'Window & typeof globalThis'.
lib/client-utils.ts(105,12): error TS2339: Property 'gtag' does not exist on type 'Window & typeof globalThis'.
lib/client-utils.ts(109,47): error TS2339: Property 'posthog' does not exist on type 'Window & typeof globalThis'.
lib/client-utils.ts(110,12): error TS2339: Property 'posthog' does not exist on type 'Window & typeof globalThis'.
lib/config/env-config.ts(116,19): error TS2540: Cannot assign to 'NODE_ENV' because it is a read-only property.
lib/cookies/consent-manager.ts(249,12): error TS2339: Property 'gtag' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(249,26): error TS2339: Property 'gtag' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(250,15): error TS2339: Property 'dataLayer' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(250,34): error TS2339: Property 'dataLayer' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(253,12): error TS2339: Property 'gtag' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(273,12): error TS2339: Property 'gtag' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(273,26): error TS2339: Property 'gtag' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(274,15): error TS2339: Property 'dataLayer' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(274,34): error TS2339: Property 'dataLayer' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(277,12): error TS2339: Property 'gtag' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(291,12): error TS2339: Property 'gtag' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(291,26): error TS2339: Property 'gtag' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(292,15): error TS2339: Property 'dataLayer' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(292,34): error TS2339: Property 'dataLayer' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(295,12): error TS2339: Property 'gtag' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(308,12): error TS2339: Property 'gtag' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(308,26): error TS2339: Property 'gtag' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(309,15): error TS2339: Property 'dataLayer' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(309,34): error TS2339: Property 'dataLayer' does not exist on type 'Window & typeof globalThis'.
lib/cookies/consent-manager.ts(312,12): error TS2339: Property 'gtag' does not exist on type 'Window & typeof globalThis'.
lib/data-fetchers.ts(153,31): error TS2339: Property 'service' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
lib/data-fetchers.ts(203,34): error TS2339: Property 'caseStudy' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
lib/data-fetchers.ts(256,35): error TS2339: Property 'testimonial' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
lib/data-fetchers.ts(310,28): error TS2339: Property 'blog_post' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
lib/email/resend-service.ts(60,9): error TS2322: Type 'ReactNode | Promise<ReactNode>' is not assignable to type 'ReactNode'.
  Type 'Promise<ReactNode>' is not assignable to type 'ReactNode'.
    Type 'Promise<ReactNode>' is not assignable to type 'Promise<AwaitedReactNode>'.
      Type 'ReactNode' is not assignable to type 'AwaitedReactNode'.
        Type 'Promise<AwaitedReactNode>' is not assignable to type 'AwaitedReactNode'.
lib/email/resend-service.ts(96,9): error TS2322: Type 'ReactNode | Promise<ReactNode>' is not assignable to type 'ReactNode'.
  Type 'Promise<ReactNode>' is not assignable to type 'ReactNode'.
    Type 'Promise<ReactNode>' is not assignable to type 'Promise<AwaitedReactNode>'.
      Type 'ReactNode' is not assignable to type 'AwaitedReactNode'.
        Type 'Promise<AwaitedReactNode>' is not assignable to type 'AwaitedReactNode'.
lib/email/resend-service.ts(132,9): error TS2322: Type 'ReactNode | Promise<ReactNode>' is not assignable to type 'ReactNode'.
  Type 'Promise<ReactNode>' is not assignable to type 'ReactNode'.
    Type 'Promise<ReactNode>' is not assignable to type 'Promise<AwaitedReactNode>'.
      Type 'ReactNode' is not assignable to type 'AwaitedReactNode'.
        Type 'Promise<AwaitedReactNode>' is not assignable to type 'AwaitedReactNode'.
lib/error/error-handling.ts(469,7): error TS2532: Object is possibly 'undefined'.
lib/error/error-handling.ts(505,15): error TS2484: Export declaration conflicts with exported declaration of 'AppError'.
lib/error/error-handling.ts(505,25): error TS2484: Export declaration conflicts with exported declaration of 'ActionResult'.
lib/error/error-handling.ts(505,39): error TS2484: Export declaration conflicts with exported declaration of 'ErrorBoundaryState'.
lib/error/error-handling.ts(505,59): error TS2484: Export declaration conflicts with exported declaration of 'RetryConfig'.
lib/error/error-handling.ts(505,72): error TS2484: Export declaration conflicts with exported declaration of 'ErrorMetrics'.
lib/gdpr/compliance.ts(208,11): error TS2322: Type 'string | null | undefined' is not assignable to type 'string | undefined'.
  Type 'null' is not assignable to type 'string | undefined'.
lib/gdpr/compliance.ts(212,9): error TS2322: Type '{ date: Date; subject: string | null; message: string; status: ContactStatus; }[]' is not assignable to type '{ date: Date; subject?: string | undefined; message: string; status: string; }[]'.
  Type '{ date: Date; subject: string | null; message: string; status: $Enums.ContactStatus; }' is not assignable to type '{ date: Date; subject?: string | undefined; message: string; status: string; }'.
    Types of property 'subject' are incompatible.
      Type 'string | null' is not assignable to type 'string | undefined'.
        Type 'null' is not assignable to type 'string | undefined'.
lib/images/image-config.ts(132,25): error TS2339: Property 'width' does not exist on type 'never'.
lib/images/image-config.ts(133,26): error TS2339: Property 'height' does not exist on type 'never'.
lib/integrations/cal-supabase-wrapper.ts(295,39): error TS18046: 'error' is of type 'unknown'.
lib/integrations/cal-supabase-wrapper.ts(374,37): error TS18046: 'error' is of type 'unknown'.
lib/lazy-loading/config.ts(135,46): error TS2345: Argument of type 'string' is not assignable to parameter of type '"Navigation" | "Header" | "Hero" | "ErrorBoundary"'.
lib/lazy-loading/config.ts(149,46): error TS2345: Argument of type 'string' is not assignable to parameter of type '"Navigation" | "Header" | "Hero" | "ErrorBoundary"'.
lib/lazy-loading/config.ts(153,51): error TS2345: Argument of type 'string' is not assignable to parameter of type '"ContactForm" | "NewsletterForm" | "CTASections"'.
lib/lazy-loading/config.ts(157,53): error TS2345: Argument of type 'string' is not assignable to parameter of type '"ServicesSection" | "TestimonialsSection" | "PricingSection"'.
lib/lazy-loading/config.ts(161,50): error TS2345: Argument of type 'string' is not assignable to parameter of type '"FloatingElements" | "AnimatedComponents" | "DecorativeElements"'.
lib/lazy-loading/config.ts(165,46): error TS2345: Argument of type 'string' is not assignable to parameter of type '"Analytics" | "AdminComponents" | "ServiceWorker"'.
lib/lazy-loading/lazy-config.tsx(7,10): error TS1484: 'ComponentType' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
lib/lazy-loading/lazy-config.tsx(7,25): error TS1484: 'ReactNode' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
lib/lazy-loading/lazy-config.tsx(187,58): error TS2307: Cannot find module '@/components/admin/AdminDashboard' or its corresponding type declarations.
lib/lazy-loading/lazy-config.tsx(188,46): error TS2322: Type 'Promise<typeof import("/Users/richard/business-website/components/admin/dashboard-01/data-table")>' is not assignable to type 'Promise<{ default: ComponentType<any>; }>'.
  Property 'default' is missing in type 'typeof import("/Users/richard/business-website/components/admin/dashboard-01/data-table")' but required in type '{ default: ComponentType<any>; }'.
lib/lazy-loading/lazy-config.tsx(191,54): error TS2307: Cannot find module '@/components/analytics/chart' or its corresponding type declarations.
lib/lazy-loading/lazy-config.tsx(194,52): error TS2307: Cannot find module '@/components/modals/contact-modal' or its corresponding type declarations.
lib/lazy-loading/lazy-config.tsx(197,63): error TS2307: Cannot find module '@/components/theme/theme-switcher' or its corresponding type declarations.
lib/lazy-loading/lazy-config.tsx(200,57): error TS2322: Type 'Promise<typeof import("/Users/richard/business-website/components/booking/cal-com-widget")>' is not assignable to type 'Promise<{ default: ComponentType<any>; }>'.
  Property 'default' is missing in type 'typeof import("/Users/richard/business-website/components/booking/cal-com-widget")' but required in type '{ default: ComponentType<any>; }'.
lib/metadata/metadata-utils.ts(1,10): error TS1484: 'Metadata' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
lib/metadata/metadata-utils.ts(85,7): error TS2322: Type '"service" | "website" | "article"' is not assignable to type '"website" | "article"'.
  Type '"service"' is not assignable to type '"website" | "article"'.
lib/monitoring/index.ts(399,23): error TS18048: 'lastEntry' is possibly 'undefined'.
lib/redis/production-rate-limiter.ts(293,9): error TS2322: Type 'string | null' is not assignable to type 'string | undefined'.
  Type 'null' is not assignable to type 'string | undefined'.
lib/redis/rate-limiter.ts(425,12): error TS2532: Object is possibly 'undefined'.
lib/security/csp.ts(537,15): error TS2484: Export declaration conflicts with exported declaration of 'CSPConfig'.
lib/security/csp.ts(537,26): error TS2484: Export declaration conflicts with exported declaration of 'CSPNonce'.
lib/security/csp.ts(537,36): error TS2484: Export declaration conflicts with exported declaration of 'CSPViolation'.
lib/security/spam-protection.ts(71,15): error TS18048: 'domainName' is possibly 'undefined'.
lib/security/spam-protection.ts(261,36): error TS2532: Object is possibly 'undefined'.
types/utility-types.ts(51,30): error TS2344: Type 'NestedKeyOf<T[K1]> & K2' does not satisfy the constraint 'NestedKeyOf<T[K1]>'.
  Type 'NestedKeyOf<T[K1]> & K2' is not assignable to type 'T[K1][keyof T[K1] & string] extends object ? `${keyof T[K1] & string}` | `${keyof T[K1] & string}.${NestedKeyOf<T[K1][keyof T[K1] & string]>}` : `${keyof T[K1] & string}`'.
